/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
    scw: shift_caps_word {
      compatible = "zmk,behavior-tap-dance";
      label = "SHIFT_CAPS_WORD";
      #binding-cells = <0>;
      bindings =
        <&sk LSHFT>,
        <&caps_word>;
    };
    tdl1: tap_dance_layer_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_LAYER_1";
      #binding-cells = <0>;
      bindings =
        <&mo 1>,
        <&to 1>;
    };
    ok: overlapped_key {
      compatible = "zmk,behavior-hold-tap";
      label = "OVERLAPPED_KEY";
      bindings =
        <&kp>,
        <&kp>;

      #binding-cells = <2>;
      tapping-term-ms = <150>;
      flavor = "balanced";
    };
    tdl2: tap_dance_layer_2 {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_LAYER_2";
      #binding-cells = <0>;
      bindings =
        <&mo 2>,
        <&to 2>;
    };
  };

  combos {
    compatible = "zmk,combos";

    caps_word {
      bindings = <&caps_word>;
      key-positions = <17 18>;
    };

    to_base_layer {
      bindings = <&to 0>;
      key-positions = <38 39>;
    };

    clear_bluetooth_profile {
      bindings = <&bt BT_CLR>;
      key-positions = <0 38 39 11>;
    };
  };

  macros {
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
  &kp TAB  &kp Q        &kp W       &kp E       &kp R      &kp T      &kp Y       &kp U       &kp I        &kp O     &kp P  &kp BSPC
&kp GRAVE  &kp A  &hm LCTRL S  &hm LALT D  &hm LGUI F      &kp G      &kp H  &hm LGUI J  &hm RALT K  &hm RCTRL L  &kp SEMI  &kp APOS
    &none  &kp Z        &kp X       &kp C       &kp V      &kp B      &kp N       &kp M   &kp COMMA      &kp DOT  &kp FSLH  &kp BSLH
                                    &tdl2        &scw  &kp SPACE    &kp RET       &tdl1     &kp ESC
      >;
    };

    raise {
      bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5       &kp N6     &kp N7    &kp N8             &kp N9  &kp N0  &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans     &kp LEFT   &kp DOWN    &kp UP          &kp RIGHT  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RIGHT_BRACKET  &trans   &trans
                        &trans  &trans  &trans       &trans      &to 0    &trans
      >;
    };

    lower {
      bindings = <
&kp C_BRI_DN  &kp C_BRI_UP    &kp LC(UP)  &kp LC(DOWN)        &trans  &trans    &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans        &trans    &trans      &trans      &trans        &trans        &trans
      &trans        &trans        &trans        &trans        &trans  &trans        &trans    &trans      &trans      &trans        &trans        &trans
                                                &trans         &mo 0  &trans        &trans    &trans      &trans
      >;
    };
  };
};
