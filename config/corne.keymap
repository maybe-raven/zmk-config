/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <38 39 11 0>;
        };
    };

    behaviors {
        bkmm: bkmm {
            compatible = "zmk,behavior-mod-morph";
            label = "BRIGHTNESS_KEYS";
            bindings =
                <&kp C_BRIGHTNESS_DEC>,
                <&kp C_BRIGHTNESS_INC>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        vkmm: vkmm {
            compatible = "zmk,behavior-mod-morph";
            label = "VOLUME_KEYS";
            bindings =
                <&kp C_VOLUME_DOWN>,
                <&kp C_VOLUME_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        pnmm: pnmm {
            compatible = "zmk,behavior-mod-morph";
            label = "PREVIOUS_NEXT";
            bindings =
                <&kp C_PREVIOUS>,
                <&kp C_NEXT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        mpmm: mpmm {
            compatible = "zmk,behavior-mod-morph";
            label = "MUTE_PAUSE";
            bindings =
                <&kp K_MUTE>,
                <&kp C_PLAY_PAUSE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
         &kp TAB  &kp Q  &kp W         &kp E           &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P    &kp BSPC
&sk LEFT_CONTROL  &kp A  &kp S         &kp D           &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI     &kp SQT
    &sk LEFT_ALT  &kp Z  &kp X         &kp C           &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &caps_word
                                &sk LEFT_GUI  &sk LEFT_SHIFT  &kp SPACE    &kp RET  &sl 1    &kp ESC
            >;
        };

        lower_layer {
            bindings = <
&kp GRAVE        &kp N1        &kp N2        &kp N3        &kp N4         &kp N5       &kp N6     &kp N7    &kp N8             &kp N9      &kp N0     &kp DELETE
   &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &kp LEFT_ALT     &kp LEFT   &kp DOWN    &kp UP          &kp RIGHT  &kp LC(F3)    &kp PAGE_UP
   &trans         &bkmm         &vkmm         &mpmm         &pnmm  &kp BACKSLASH    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RIGHT_BRACKET  &kp LG(F3)  &kp PAGE_DOWN
                                             &trans        &trans         &trans       &trans     &trans    &trans
            >;
        };
    };
};
